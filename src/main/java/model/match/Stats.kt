package model.match

/**
 * @author Josiah Kendall
 */
data class Stats(val participantId : Int,
                 val win : Boolean,
                 val item0 : Int,
                 val item1 : Int,
                 val item2 : Int,
                 val item3 : Int,
                 val item4 : Int,
                 val item5 : Int,
                 val item6 : Int,
                 val kills : Int,
                 val deaths : Int,
                 val assists : Int,
                 val largestKillingSpree : Int,
                 val largestMultiKill : Int,
                 val killingSprees : Int,
                 val longestTimeSpentLiving : Int,
                 val doubleKills : Int,
                 val tripleKills : Int,
                 val quadraKills : Int,
                 val pentaKills : Int,
                 val unrealKills : Int,
                 val totalDamageDealt : Int,
                 val magicDamageDealt : Int,
                 val physicalDamageDealt : Int,
                 val trueDamageDealt : Int,
                 val largestCriticalStrike : Int,
                 val totalDamageDealtToChampions : Int,
                 val magicDamageDealtToChampions : Int,
                 val physicalDamageDealtToChampions : Int,
                 val trueDamageDealtToChampions : Int,
                 val totalHeal : Int,
                 val totalUnitsHealed : Int,
                 val damageSelfMitigated : Int,
                 val damageDealtToObjectives : Int,
                 val damageDealtToTurrets : Int,
                 val visionScore : Int,
                 val timeCCingOthers : Int,
                 val totalDamageTaken : Int,
                 val magicDamageTaken : Int,
                 val physicalDamageTaken : Int,
                 val trueDamageTaken : Int,
                 val goldEarned : Int,
                 val goldSpent :Int,
                 val turretKills : Int,
                 val inhibitorKills : Int,
                 val totalMinionsKilled : Int,
                 val neutralMinionsKilled : Int,
                 val neutralMinionsKilledTeamJungle : Int,
                 val neutralMinionsKilledEnemyJungle : Int,
                 val totalTimeCrowdControlDealt : Int,
                 val champLevel : Int,
                 val visionWardsBoughtInGame : Int,
                 val sightWardsBoughtInGame : Int,
                 val wardsPlaced : Int,
                 val wardsKilled : Int,
                 val firstBloodKill : Boolean,
                 val firstBloodAssist : Boolean,
                 val firstTowerKill : Boolean,
                 val firstTowerAssist : Boolean,
                 val firstInhibitorKill : Boolean,
                 val firstInhibitorAssist : Boolean,
                 val combatPlayerScore : Int,
                 val objectivePlayerScore : Int,
                 val totalPlayerScore : Int,
                 val totalScoreRank : Int)